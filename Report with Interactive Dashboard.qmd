---
title: "Report with Interactive Dashboar"
author: "Nicole Chen"
date: "2025-02-24"
output:
  html_document:
    toc: true
    number_sections: true
  pdf_document: default
---

## Introduction
This report presents an exploratory data analysis (EDA) of World Bank indicator data for the "World" region in 2022. It includes an interactive dashboard for several figures.

```{python setup, include=False}
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import panel as pn
pn.extension()

df = pd.read_csv("wdi.csv")
```

## Interactive Dashboard
```{python}
# Create interactive widgets
country_selector = pn.widgets.Select(name='Country', options=['All'] + sorted(df['country'].dropna().unique().tolist()))
indicator_selector = pn.widgets.Select(name='Indicator', options=['life_expectancy', 'exports_gdp_share', 'education_expenditure_gdp_share'])

@pn.depends(country=country_selector.param.value, indicator=indicator_selector.param.value)
def plot_indicator(country, indicator):
    data = df if country == 'All' else df[df['country'] == country]
    
    if data.empty:
        return 'No data available for the selected country.'
    
    plt.figure(figsize=(6, 3))
    sns.histplot(data[indicator], bins=30, kde=True, color='blue')
    plt.title(f"{indicator.replace('_', ' ').title()} Distribution ({country})")
    plt.xlabel(indicator.replace('_', ' ').title())
    plt.ylabel("Frequency")
    plt.grid(True)
    plt.show()
```

## Interactive Dashboard
```{python}
@pn.depends(country=country_selector.param.value)
def plot_scatter(country):
    data = df if country == 'All' else df[df['country'] == country]
    
    if data.empty:
        return 'No data available for the selected country.'
    
    plt.figure(figsize=(8,6))
    sns.scatterplot(data=data, x='education_expenditure_gdp_share', y='life_expectancy', hue='country', palette='coolwarm', s=100, legend=False)
    plt.title(f"Education Expenditure vs Life Expectancy ({country})")
    plt.xlabel("Education Expenditure as a Share of GDP (%)")
    plt.ylabel("Life Expectancy (Years)")
    plt.grid(True)
    plt.show()

dashboard = pn.Column(
    "### Select Country and Indicator",
    pn.Row(country_selector, indicator_selector),
    plot_indicator,
    "### Education Expenditure vs Life Expectancy",
    plot_scatter
)

dashboard.servable()
```